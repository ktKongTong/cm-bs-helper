[versions]
# plugins
gradle-versions-plugin = "0.48.0"
version-catalog-update-plugin = "0.8.1"
android-gradle-plugin = "8.1.4"
jetbrains-compose-plugin = "1.5.10"

# kotlin & kotlinx
ksp = "1.9.10-1.0.13"
kotlin = "1.9.10"
kotlinx-immutable = "0.3.5"
kotlinx-serialization = "1.6.0"
kotlinx-datetime = "0.4.1"
kotlinx-coroutines =  "1.7.3"
kotlinx-io = "0.3.0"
# io support
okio = "3.6.0"
# logger
kotlin-logging = "5.1.0"
slf4j = "2.0.9"
# db
sqldelight = "2.0.0"
# web client
ktor = "2.3.6"
# multiplatform resources access
moko-resources = "0.23.0"
# paging
cash-paging = "3.3.0-alpha02-0.4.0"
# data store
androidx-datastore-core-okio = "1.1.0-alpha05"
androidx-datastore-preferences-core = "1.1.0-alpha05"
# navigation
precompose = "1.5.7"
# di
koin-compose = "1.1.0"
koin-core = "3.5.0"
koin-android = "3.5.0"
koin-ktor = "3.5.1"

# third party compose
wsc-multiplatform = "0.3.1"
kamel = "0.8.3"
mpfilepicker = "3.0.0"

# androidx
androidx-corektx = "1.12.0"
androidx-appcompat = "1.6.1"
androidx-activity-compose = "1.7.2"
androidx-annotation = "1.7.0"
androidx-collection = "1.3.0-rc01"

beatmap-io = "1.0.+"
[libraries]
# kotlin & kotlinx
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-immutable" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
# logger
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlin-logging" }
kotlin-logging-jvm = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-log4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }

# coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-jvm = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# data store
androidx-datastore-core-okio = { module = "androidx.datastore:datastore-core-okio", version.ref = "androidx-datastore-core-okio" }
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "androidx-datastore-preferences-core" }

# paging
cash-paging-common = { module = "app.cash.paging:paging-common", version.ref = "cash-paging" }
cash-paging-compose-common = { module = "app.cash.paging:paging-compose-common", version.ref = "cash-paging" }
cash-paging-testing = { module = "app.cash.paging:paging-testing", version.ref = "cash-paging" }

# db
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }

sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-androidx-paging3-extensions = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }


# resources
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }

# di
koin-core = { module = "io.insert-koin:koin-core",version.ref = "koin-core" }
koin-core-coroutines = { module = "io.insert-koin:koin-core-coroutines",version.ref = "koin-core" }
koin-android = { module = "io.insert-koin:koin-android",version.ref = "koin-android" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose",version.ref = "koin-android" }
koin-compose = { module = "io.insert-koin:koin-compose",version.ref = "koin-compose" }
koin-ktor = { module = "io.insert-koin:koin-ktor",version.ref = "koin-ktor" }

# compose
mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }
wsc-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "wsc-multiplatform" }
kamel = { module = "media.kamel:kamel-image", version.ref = "kamel" }
precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
precompose-molecule = { module = "moe.tlaster:precompose-molecule", version.ref = "precompose" }
precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "precompose" }
precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "precompose" }

# io
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# beatsaver
beatmap-io = { module = "io.beatmaps:BeatMaps-CommonMP", version.ref = "beatmap-io" }

# androidx
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-collection = { module = "androidx.collection:collection", version.ref = "androidx-collection" }

androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-corektx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }


[plugins]
# gradle
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions-plugin" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "version-catalog-update-plugin" }

# kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# android
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-test = { id = "com.android.test", version.ref = "android-gradle-plugin" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose-plugin" }

moko-multiplatform-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
moko-resources-generator = { id = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }


sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }