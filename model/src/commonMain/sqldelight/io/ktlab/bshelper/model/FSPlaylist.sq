import kotlin.Boolean;
import kotlin.Int;
CREATE TABLE IF NOT EXISTS `FSPlaylist` (
    id TEXT NOT NULL,
    basePath TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT DEFAULT NULL,

    customTags TEXT DEFAULT NULL,
--     stastistics
    mapAmount INTEGER AS Int NOT NULL DEFAULT 0,
    totalDuration INTEGER DEFAULT NULL,
    maxDuration INTEGER DEFAULT NULL,
    avgDuration INTEGER DEFAULT NULL,
    maxNote INTEGER DEFAULT NULL,
    avgNote REAL DEFAULT NULL,
    avgObstacle REAL DEFAULT NULL,
    avgBomb REAL DEFAULT NULL,
    maxNps REAL DEFAULT NULL,
    avgNps REAL DEFAULT NULL,
--  beatsaver
    bsPlaylistId TEXT,

    sync INTEGER AS Boolean NOT NULL,
    syncTimestamp INTEGER NOT NULL
);

selectAll:
SELECT * FROM `FSPlaylist` WHERE sync = 1;


insertAll:
INSERT INTO `FSPlaylist` (
    id,
    name,
    description,
    bsPlaylistId,
    basePath,
    sync,
    syncTimestamp
) VALUES ?;

insertAnyway:
INSERT OR REPLACE INTO `FSPlaylist` (
    id,
    name,
    description,
    mapAmount,
    totalDuration,
    maxDuration,
    avgDuration,
    maxNote,
    avgNote,
    avgObstacle,
    avgBomb,
    maxNps,
    avgNps,
    bsPlaylistId,
    basePath,
    sync,
    syncTimestamp
) VALUES ?;

adjustPlaylistMapCntByPlaylistId:
UPDATE `FSPlaylist`
SET mapAmount = mapAmount + ?
WHERE basePath = ?;

selectByIds:
SELECT *
FROM FSPlaylist
WHERE id IN ?;
-- equivalent to selectById
selectAllByBasePath:
SELECT * FROM `FSPlaylist`
WHERE basePath = ? AND sync = 1;


deleteByBasePath:
DELETE FROM `FSPlaylist`
WHERE basePath = ?;

deleteById:
DELETE FROM `FSPlaylist`
WHERE id = ?;

deleteAll:
DELETE FROM `FSPlaylist`;
-- DELETE FROM `FSMap`;

deleteAllByBasePath:
DELETE FROM `FSPlaylist`
WHERE basePath = ?;